root@qingfusheng-VirtualBox:~/git/testing/new2# g++ main.cpp libcpr.a -o output -lcurl
main.cpp: In function ‘void Register1()’:
main.cpp:33:50: error: unable to find string literal operator ‘operator""RegisterObject’ with ‘const char [63]’, ‘long unsigned int’ arguments
     session.SetOption(cpr::Body{"{"RegisterObject":{\"DeviceID\":\"31000000001310910561\",\"ProtocolVersion\":\"2.0\"}}"});
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.cpp:33:121: error: no matching function for call to ‘cpr::Body::Body(<brace-enclosed initializer list>)’
 bject":{\"DeviceID\":\"31000000001310910561\",\"ProtocolVersion\":\"2.0\"}}"});
                                                                             ^
In file included from cpr/session.h:9:0,
                 from cpr/api.h:17,
                 from cpr/cpr.h:4,
                 from main.cpp:7:
cpr/body.h:18:5: note: candidate: cpr::Body::Body(std::initializer_list<std::__cxx11::basic_string<char> >)
     Body(const std::initializer_list<std::string> args) : StringHolder<Body>(args) {}
     ^~~~
cpr/body.h:18:5: note:   conversion of argument 1 would be ill-formed:
cpr/body.h:17:5: note: candidate: cpr::Body::Body(const char*, size_t)
     Body(const char* str, size_t len) : StringHolder<Body>(str, len) {}
     ^~~~
cpr/body.h:17:5: note:   candidate expects 2 arguments, 1 provided
cpr/body.h:16:5: note: candidate: cpr::Body::Body(const char*)
     Body(const char* body) : StringHolder<Body>(body) {}
     ^~~~
cpr/body.h:16:5: note:   conversion of argument 1 would be ill-formed:
cpr/body.h:15:5: note: candidate: cpr::Body::Body(std::__cxx11::string&&)
     Body(std::string&& body) : StringHolder<Body>(std::move(body)) {}
     ^~~~
cpr/body.h:15:5: note:   conversion of argument 1 would be ill-formed:
cpr/body.h:14:5: note: candidate: cpr::Body::Body(const string&)
     Body(const std::string& body) : StringHolder<Body>(body) {}
     ^~~~
cpr/body.h:14:5: note:   conversion of argument 1 would be ill-formed:
cpr/body.h:13:5: note: candidate: cpr::Body::Body()
     Body() : StringHolder<Body>() {}
     ^~~~
cpr/body.h:13:5: note:   candidate expects 0 arguments, 1 provided
cpr/body.h:11:7: note: candidate: cpr::Body::Body(const cpr::Body&)
 class Body : public StringHolder<Body> {
       ^~~~
cpr/body.h:11:7: note:   conversion of argument 1 would be ill-formed:
main.cpp: In function ‘void Register2()’:
main.cpp:51:50: error: unable to find string literal operator ‘operator""RegisterObject’ with ‘const char [63]’, ‘long unsigned int’ arguments
     session.SetOption(cpr::Body{"{"RegisterObject":{\"DeviceID\":\"31000000001310910561\",\"ProtocolVersion\":\"2.0\"}}"});
                                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
main.cpp:51:121: error: no matching function for call to ‘cpr::Body::Body(<brace-enclosed initializer list>)’
 bject":{\"DeviceID\":\"31000000001310910561\",\"ProtocolVersion\":\"2.0\"}}"});
                                                                             ^
In file included from cpr/session.h:9:0,
                 from cpr/api.h:17,
                 from cpr/cpr.h:4,
                 from main.cpp:7:
cpr/body.h:18:5: note: candidate: cpr::Body::Body(std::initializer_list<std::__cxx11::basic_string<char> >)
     Body(const std::initializer_list<std::string> args) : StringHolder<Body>(args) {}
     ^~~~
cpr/body.h:18:5: note:   conversion of argument 1 would be ill-formed:
cpr/body.h:17:5: note: candidate: cpr::Body::Body(const char*, size_t)
     Body(const char* str, size_t len) : StringHolder<Body>(str, len) {}
     ^~~~
cpr/body.h:17:5: note:   candidate expects 2 arguments, 1 provided
cpr/body.h:16:5: note: candidate: cpr::Body::Body(const char*)
     Body(const char* body) : StringHolder<Body>(body) {}
     ^~~~
cpr/body.h:16:5: note:   conversion of argument 1 would be ill-formed:
cpr/body.h:15:5: note: candidate: cpr::Body::Body(std::__cxx11::string&&)
     Body(std::string&& body) : StringHolder<Body>(std::move(body)) {}
     ^~~~
cpr/body.h:15:5: note:   conversion of argument 1 would be ill-formed:
cpr/body.h:14:5: note: candidate: cpr::Body::Body(const string&)
     Body(const std::string& body) : StringHolder<Body>(body) {}
     ^~~~
cpr/body.h:14:5: note:   conversion of argument 1 would be ill-formed:
cpr/body.h:13:5: note: candidate: cpr::Body::Body()
     Body() : StringHolder<Body>() {}
     ^~~~
cpr/body.h:13:5: note:   candidate expects 0 arguments, 1 provided
cpr/body.h:11:7: note: candidate: cpr::Body::Body(const cpr::Body&)
 class Body : public StringHolder<Body> {
       ^~~~
cpr/body.h:11:7: note:   conversion of argument 1 would be ill-formed:

